#Ctrl-aに変更する
set -g prefix C-q

# C-bのキーバインドを解除する
unbind C-b

# 256色端末を使用する
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Escキーの遅延を解消
set -s escape-time 0

# status lineを更新する間隔を1秒にする
set-option -g status-interval 1

# ウィンドウのインデックスを1から始める
set -g base-index 1

# ペインのインデックスを1から始める
setw -g pane-base-index 1

# アクティブなペインのみ白っぽく変更(真っ黒は232)
set -g window-style 'bg=colour239, fg=colour234'
set -g window-active-style 'bg=colour235, fg=colour68'

# | でペインを縦に分割する
bind | split-window -h

# - でペインを横に分割する
bind - split-window -v

# Vimのキーバインドでペインを移動する
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Vimのキーバインドでペインをリサイズする
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ステータスバーの色を設定する
#set -g status-fg white
#set -g status-bg black

# ウィンドウリストの色を設定する
#setw -g window-status-fg cyan
#setw -g window-status-bg default
#setw -g window-status-attr dim

# アクティブなウィンドウを目立たせる
#setw -g window-status-current-fg white
#setw -g window-status-current-bg red
#setw -g window-status-current-attr bright

# ペインボーダーの色を設定する
#set -g pane-border-fg green
#set -g pane-border-bg black

# アクティブなペインを目立たせる
#set -g pane-active-border-fg white
#set -g pane-active-border-bg yellow

# コマンドラインの色を設定する
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright

# ウィンドウリストの位置を中心寄せにする
set -g status-justify centre

# status line の背景色を指定する。
set-option -g status-bg "colour238"

# status line の文字色を指定する。
set-option -g status-fg "colour255"

# ステータスバーを設定する
## 左パネルを設定する
set -g status-left-length 90
set -g status-left "#[bold]TMUX, #[fg=green]Session:#S, #[fg=yellow]Window:#I, #[fg=cyan]Pain:#P, #[fg=magenta]Host:#h"

## 右パネルを設定する
set -g status-right-length 200
set -g status-right "#[fg=cyan] [%Y-%m-%d(%a) %H:%M]"

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on

## viのキーバインドを使用する
setw -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection

# history size to 5000
set-option -g history-limit 100000

## マウス操作を有効化
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

### MacOS
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
